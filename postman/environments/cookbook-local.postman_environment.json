{
	"info": {
		"_postman_id": "8c26f83a-1da1-4862-83b7-1c0beb121d38",
		"name": "Cookbook",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23053875"
	},
	"item": [
		{
			"name": "health",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200 OK\", pm.response.code == 200);\r",
							"if (pm.response.code == 200)\r",
							"{\r",
							"    pm.test(\"Server status is up\", jsonData.status == \"up\");\r",
							"    pm.test(\"Server responded in under 100ms\", pm.response.responseTime <= 100);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{cookbook_url}}/api/health",
					"host": [
						"{{cookbook_url}}"
					],
					"path": [
						"api",
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "newRecipe",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"expectedResponse\", {\r",
							"    \"isSuccessful\": true,\r",
							"    \"wasFound\": false,\r",
							"    \"wasUpdated\": false,\r",
							"    \"wasDeleted\": false,\r",
							"    \"status\": \"Saved\"\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200 OK\", pm.response.code == 200);\r",
							"if (pm.response.code == 200)\r",
							"{\r",
							"    pm.test(\"Creation was successful\", jsonData.isSuccessful == true);\r",
							"    pm.test(\"Response is as expected\", jsonData === pm.globals.get(\"expectedResponse\"));\r",
							"    pm.test(\"Server responded in under 1000ms\", pm.response.responseTime <= 1000);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"test name\",\r\n    \"numServings\": 4,\r\n    \"steps\": \"These are the steps to make the recipe\",\r\n    \"imageUrl\": \"https://www.thisistheimageurl.com/image1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{cookbook_url}}/api/recipe",
					"host": [
						"{{cookbook_url}}"
					],
					"path": [
						"api",
						"recipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "fetchRecipes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var requestData = pm.request.body;\r",
							"\r",
							"pm.test(\"Status code is 200 OK\", pm.response.code == 200);\r",
							"if (pm.response.code == 200)\r",
							"{\r",
							"    pm.test(\"Request was Successful\", jsonData.isSuccessful == true);\r",
							"    pm.test(\"Recipe was found\", jsonData.wasFound == true);\r",
							"    pm.test(\"Recipe was retrieved\", jsonData.recipe.length > 0);\r",
							"    jsonData.recipe.forEach(recipe => {\r",
							"        pm.test(\"Retrieved recipe name matches query\", recipe.name === requestData.name);\r",
							"    });\r",
							"    pm.test(\"Server responded in under 5000ms\", pm.response.responseTime <= 5000);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"test name\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{cookbook_url}}/api/recipe",
					"host": [
						"{{cookbook_url}}"
					],
					"path": [
						"api",
						"recipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "fetchRecipeById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var requestData = pm.request.body;\r",
							"\r",
							"pm.test(\"Status code is 200 OK\", pm.response.code == 200);\r",
							"if (pm.response.code == 200)\r",
							"{\r",
							"    pm.test(\"Request was Successful\", jsonData.isSuccessful == true);\r",
							"    pm.test(\"Recipe was found\", jsonData.wasFound == true);\r",
							"    pm.test(\"Only one recipe was retrieved\", Array.isArray(jsonData.recipe) == false);\r",
							"    if (Array.isArray(jsonData.recipe) == false)\r",
							"    {\r",
							"        pm.test(\"Retrieved recipe id matches route\", jsonData.recipe.id === pm.request.toJSON().url[2]);\r",
							"    }\r",
							"    pm.test(\"Server responded in under 500ms\", pm.response.responseTime <= 500);\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{cookbook_url}}/api/recipe/{{recipe_id}}",
					"host": [
						"{{cookbook_url}}"
					],
					"path": [
						"api",
						"recipe",
						"{{recipe_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateRecipe",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200 OK\", pm.response.code == 200);\r",
							"if (pm.response.code == 200)\r",
							"{\r",
							"    pm.test(\"Request was successful\", jsonData.isSuccessful);\r",
							"    pm.test(\"Recipe was found\", jsonData.wasFound);\r",
							"    pm.test(\"Recipe was updated\", jsonData.wasUpdated);\r",
							"    pm.test(\"Server responded in under 1000ms\", pm.response.responseTime <= 1000);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{recipe_id}}\",\r\n    \"name\": \"updated test name\",\r\n    \"numServings\": 4,\r\n    \"steps\": \"updated steps\",\r\n    \"imageUrl\": \"new image url\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{cookbook_url}}/api/recipe",
					"host": [
						"{{cookbook_url}}"
					],
					"path": [
						"api",
						"recipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteRecipe",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200 OK\", pm.response.code == 200);\r",
							"if (pm.response.code == 200)\r",
							"{\r",
							"    pm.test(\"Creation was successful\", jsonData.isSuccessful);\r",
							"    pm.test(\"Recipe was found\", jsonData.wasFound);\r",
							"    pm.test(\"Recipe was deleted\", jsonData.wasDeleted);\r",
							"    pm.test(\"Server responded in under 1000ms\", pm.response.responseTime <= 500);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"630cf99a195320d39516dcc0\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{cookbook_url}}/api/recipe",
					"host": [
						"{{cookbook_url}}"
					],
					"path": [
						"api",
						"recipe"
					]
				}
			},
			"response": []
		}
	]
}